# Generated by Django 3.0.6 on 2021-07-18 18:20

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models
import users.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_picture', models.ImageField(default='profile_pics/default.jpg', upload_to=users.models.Profile.dp_rename_and_path)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('sex', models.CharField(choices=[('m', 'Male'), ('f', 'Female'), ('o', 'Others')], default='m', max_length=1)),
                ('dob', models.DateField(default=datetime.date(2016, 7, 18), validators=[users.validators.validate_dob], verbose_name='Date of Birth')),
                ('bio', models.TextField(default="Hi there! Let's be friends", max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('sent', 'sent you a friend request'), ('accepted', 'accepted your friend request')], default='sent', max_length=10)),
                ('seen', models.BooleanField(default=False)),
                ('time_stamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='about_whom', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notifications',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='Friends',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL)),
                ('friends', models.ManyToManyField(blank=True, related_name='friends', to=settings.AUTH_USER_MODEL)),
                ('pending_received_list', models.ManyToManyField(blank=True, related_name='pending_received_list', to=settings.AUTH_USER_MODEL)),
                ('pending_sent_list', models.ManyToManyField(blank=True, related_name='pending_sent_list', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Friends',
                'verbose_name_plural': 'Friends',
            },
        ),
        migrations.CreateModel(
            name='BlockedUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blocked_list', models.ManyToManyField(blank=True, related_name='is_blocked_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='me', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blocked Users',
                'verbose_name_plural': 'Blocked Users',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=60)),
                ('state', models.CharField(max_length=30)),
                ('country', models.CharField(max_length=50)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.Profile')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Address',
            },
        ),
    ]
